version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ros-postgres
    environment:
      POSTGRES_DB: ros_db
      POSTGRES_USER: ros_user
      POSTGRES_PASSWORD: ros_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ros_user -d ros_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ros-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # OSRM Backend (for routing)
  osrm:
    image: osrm/osrm-backend:v5.27.1
    container_name: ros-osrm
    ports:
      - "5000:5000"
    volumes:
      - ./osrm_data:/data
    command: osrm-routed --algorithm mld /data/berlin-latest.osrm
    depends_on:
      - osrm-prepare
    restart: unless-stopped

  # OSRM Data Preparation (run once)
  osrm-prepare:
    image: osrm/osrm-backend:v5.27.1
    container_name: ros-osrm-prepare
    volumes:
      - ./osrm_data:/data
    working_dir: /data
    command: >
      sh -c "
        if [ ! -f berlin-latest.osrm ]; then
          echo 'Downloading Berlin map data...'
          wget -O berlin-latest.osm.pbf http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf
          echo 'Processing map data...'
          osrm-extract -p /opt/car.lua berlin-latest.osm.pbf
          osrm-partition berlin-latest.osrm
          osrm-customize berlin-latest.osrm
          echo 'OSRM data preparation complete!'
        else
          echo 'OSRM data already prepared'
        fi
      "

  # VROOM Optimization Engine
  vroom:
    image: vroomvrp/vroom-docker:v1.13.0
    container_name: ros-vroom
    ports:
      - "3000:3000"
    environment:
      - OSRM_URL=http://osrm:5000
    depends_on:
      - osrm
    restart: unless-stopped

  # Nominatim Geocoding Service (optional, for production)
  nominatim:
    image: mediagis/nominatim:4.2
    container_name: ros-nominatim
    ports:
      - "8080:8080"
    environment:
      PBF_URL: https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf
      REPLICATION_URL: https://download.geofabrik.de/europe/germany/berlin-updates/
      IMPORT_WIKIPEDIA: "false"
      IMPORT_US_POSTCODES: "false"
      IMPORT_GB_POSTCODES: "false"
    volumes:
      - nominatim_data:/var/lib/postgresql/12/main
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  nominatim_data:
